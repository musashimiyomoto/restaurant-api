"""Add commentas

Revision ID: 33d4b6d0f75b
Revises: c1daef174541
Create Date: 2025-06-02 17:49:40.736787

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "33d4b6d0f75b"
down_revision: Union[str, None] = "c1daef174541"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE TYPE currency AS ENUM ('RUB')")
    op.alter_column(
        "categories",
        "id",
        existing_type=sa.INTEGER(),
        comment="Category ID",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "user_id",
        existing_type=sa.INTEGER(),
        comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "parent_id",
        existing_type=sa.INTEGER(),
        comment="Parent ID",
        existing_nullable=True,
    )
    op.alter_column(
        "categories",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Category name",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "is_type",
        existing_type=sa.BOOLEAN(),
        comment="Is type category",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "is_sub_type",
        existing_type=sa.BOOLEAN(),
        comment="Is sub type",
        existing_nullable=False,
    )
    op.alter_column(
        "clients",
        "id",
        existing_type=sa.INTEGER(),
        comment="Client ID",
        existing_nullable=False,
    )
    op.alter_column(
        "clients",
        "user_id",
        existing_type=sa.INTEGER(),
        comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "clients",
        "email",
        existing_type=sa.VARCHAR(),
        comment="Email",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "telegram_id",
        existing_type=sa.INTEGER(),
        comment="Telegram ID",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "telegram_username",
        existing_type=sa.VARCHAR(),
        comment="Telegram username",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "first_name",
        existing_type=sa.VARCHAR(),
        comment="First name",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "last_name",
        existing_type=sa.VARCHAR(),
        comment="Last name",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "hashed_password",
        existing_type=sa.VARCHAR(),
        comment="Hashed password",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "is_active",
        existing_type=sa.BOOLEAN(),
        comment="Is active",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="Created at",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "clients",
        "last_login",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="Last login",
        existing_nullable=True,
    )
    op.alter_column(
        "deliveries",
        "id",
        existing_type=sa.INTEGER(),
        comment="Delivery ID",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "user_id",
        existing_type=sa.INTEGER(),
        comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "radius_from",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment="Radius from in kilometers",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "radius_to",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment="Radius to in kilometers",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "delivery_time",
        existing_type=sa.INTEGER(),
        comment="Delivery time in minutes",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "price",
        existing_type=sa.NUMERIC(),
        comment="Price in currency",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "id",
        existing_type=sa.INTEGER(),
        comment="Dish ID",
        existing_nullable=False,
        existing_server_default=sa.text("nextval('dishes_id_seq'::regclass)"),
    )
    op.alter_column(
        "dishes",
        "user_id",
        existing_type=sa.INTEGER(),
        comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "category_id",
        existing_type=sa.INTEGER(),
        comment="Category ID",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "price",
        existing_type=sa.NUMERIC(),
        comment="Price in currency",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "weight",
        existing_type=sa.NUMERIC(),
        comment="Weight in grams",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "photo_url",
        existing_type=sa.VARCHAR(),
        comment="Photo URL",
        existing_nullable=True,
    )
    op.alter_column(
        "dishes",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Dish name",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "description",
        existing_type=sa.VARCHAR(),
        comment="Dish description",
        existing_nullable=True,
    )
    op.alter_column(
        "order_dishes",
        "id",
        existing_type=sa.INTEGER(),
        comment="Order dish ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "order_id",
        existing_type=sa.INTEGER(),
        comment="Order ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "dish_id",
        existing_type=sa.INTEGER(),
        comment="Dish ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "quantity",
        existing_type=sa.INTEGER(),
        comment="Quantity",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "price",
        existing_type=sa.NUMERIC(),
        comment="Price in currency",
        existing_nullable=False,
    )
    op.alter_column(
        "order_status",
        "id",
        existing_type=sa.INTEGER(),
        comment="Order status ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_status",
        "order_id",
        existing_type=sa.INTEGER(),
        comment="Order ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_status",
        "status",
        existing_type=postgresql.ENUM(
            "CLIENT_NEW",
            "CLIENT_OPENED",
            "CLIENT_CANCELLED",
            "PENDING_CONFIRMATION",
            "CONFIRMED",
            "COOKING",
            "WAITING_COURIER",
            "WAITING_SERVER",
            "WAITING_PICKUP",
            "DELIVERY_IN_PROGRESS",
            "ON_TABLE",
            "DELIVERED",
            "RECEIVED",
            "CONSUMED",
            "RATED",
            name="orderstatusenum",
        ),
        comment="Order status",
        existing_nullable=False,
    )
    op.alter_column(
        "order_status",
        "start_date",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="Start date",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "order_status",
        "end_date",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="End date",
        existing_nullable=True,
    )
    op.alter_column(
        "order_status",
        "changed_by_user_id",
        existing_type=sa.INTEGER(),
        comment="Changed by user ID",
        existing_nullable=True,
    )
    op.alter_column(
        "order_status",
        "changed_by_client_id",
        existing_type=sa.INTEGER(),
        comment="Changed by client ID",
        existing_nullable=True,
    )
    op.create_unique_constraint(None, "order_status", ["id"])
    op.alter_column(
        "orders",
        "id",
        existing_type=sa.INTEGER(),
        comment="Order ID",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "client_id",
        existing_type=sa.INTEGER(),
        comment="Client ID",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "user_id",
        existing_type=sa.INTEGER(),
        comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "status",
        existing_type=postgresql.ENUM(
            "CLIENT_NEW",
            "CLIENT_OPENED",
            "CLIENT_CANCELLED",
            "PENDING_CONFIRMATION",
            "CONFIRMED",
            "COOKING",
            "WAITING_COURIER",
            "WAITING_SERVER",
            "WAITING_PICKUP",
            "DELIVERY_IN_PROGRESS",
            "ON_TABLE",
            "DELIVERED",
            "RECEIVED",
            "CONSUMED",
            "RATED",
            name="orderstatusenum",
        ),
        comment="Order status",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "check_photo_url",
        existing_type=sa.VARCHAR(),
        comment="Check photo URL",
        existing_nullable=True,
    )
    op.alter_column(
        "orders",
        "price",
        existing_type=sa.NUMERIC(),
        comment="Price in currency",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="Created at",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "schedules",
        "id",
        existing_type=sa.INTEGER(),
        comment="Schedule ID",
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "user_id",
        existing_type=sa.INTEGER(),
        comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "day",
        existing_type=postgresql.ENUM(
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY",
            name="dayenum",
        ),
        comment="Day",
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "start",
        existing_type=postgresql.TIME(),
        comment="Start time",
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "end",
        existing_type=postgresql.TIME(),
        comment="End time",
        existing_nullable=False,
    )
    op.add_column(
        "users", sa.Column("currency", sa.Enum("RUB", name="currency"), nullable=False)
    )
    op.alter_column(
        "users",
        "id",
        existing_type=sa.INTEGER(),
        comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "name",
        existing_type=sa.VARCHAR(),
        comment="User name",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "email",
        existing_type=sa.VARCHAR(),
        comment="User email",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "photo_url",
        existing_type=sa.VARCHAR(),
        comment="User photo URL",
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "parent_id",
        existing_type=sa.INTEGER(),
        comment="Parent ID",
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "hashed_password",
        existing_type=sa.VARCHAR(),
        comment="Hashed password",
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "role",
        existing_type=postgresql.ENUM(
            "ADMIN", "DELIVERY", "COOK", "HOSTESS", "WAITER", name="userrole"
        ),
        comment="User role",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "is_active",
        existing_type=sa.BOOLEAN(),
        comment="Is active",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="Created at",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment=None,
        existing_comment="Created at",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "is_active",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Is active",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "role",
        existing_type=postgresql.ENUM(
            "ADMIN", "DELIVERY", "COOK", "HOSTESS", "WAITER", name="userrole"
        ),
        comment=None,
        existing_comment="User role",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "hashed_password",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Hashed password",
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "parent_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Parent ID",
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "photo_url",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="User photo URL",
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "email",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="User email",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "name",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="User name",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="User ID",
        existing_nullable=False,
    )
    op.drop_column("users", "currency")
    op.alter_column(
        "schedules",
        "end",
        existing_type=postgresql.TIME(),
        comment=None,
        existing_comment="End time",
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "start",
        existing_type=postgresql.TIME(),
        comment=None,
        existing_comment="Start time",
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "day",
        existing_type=postgresql.ENUM(
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY",
            name="dayenum",
        ),
        comment=None,
        existing_comment="Day",
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "user_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Schedule ID",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment=None,
        existing_comment="Created at",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "orders",
        "price",
        existing_type=sa.NUMERIC(),
        comment=None,
        existing_comment="Price in currency",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "check_photo_url",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Check photo URL",
        existing_nullable=True,
    )
    op.alter_column(
        "orders",
        "status",
        existing_type=postgresql.ENUM(
            "PENDING",
            "COMPLETED",
            "CANCELLED",
            "CLIENT_NEW",
            "CLIENT_OPENED",
            "CLIENT_CANCELLED",
            "PENDING_CONFIRMATION",
            "CONFIRMED",
            "COOKING",
            "WAITING_COURIER",
            "WAITING_SERVER",
            "WAITING_PICKUP",
            "DELIVERY_IN_PROGRESS",
            "ON_TABLE",
            "DELIVERED",
            "RECEIVED",
            "CONSUMED",
            "RATED",
            name="orderstatusenum",
        ),
        comment=None,
        existing_comment="Order status",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "user_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "client_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Client ID",
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Order ID",
        existing_nullable=False,
    )
    op.drop_constraint(None, "order_status", type_="unique")
    op.alter_column(
        "order_status",
        "changed_by_client_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Changed by client ID",
        existing_nullable=True,
    )
    op.alter_column(
        "order_status",
        "changed_by_user_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Changed by user ID",
        existing_nullable=True,
    )
    op.alter_column(
        "order_status",
        "end_date",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment=None,
        existing_comment="End date",
        existing_nullable=True,
    )
    op.alter_column(
        "order_status",
        "start_date",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment=None,
        existing_comment="Start date",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "order_status",
        "status",
        existing_type=postgresql.ENUM(
            "PENDING",
            "COMPLETED",
            "CANCELLED",
            "CLIENT_NEW",
            "CLIENT_OPENED",
            "CLIENT_CANCELLED",
            "PENDING_CONFIRMATION",
            "CONFIRMED",
            "COOKING",
            "WAITING_COURIER",
            "WAITING_SERVER",
            "WAITING_PICKUP",
            "DELIVERY_IN_PROGRESS",
            "ON_TABLE",
            "DELIVERED",
            "RECEIVED",
            "CONSUMED",
            "RATED",
            name="orderstatusenum",
        ),
        comment=None,
        existing_comment="Order status",
        existing_nullable=False,
    )
    op.alter_column(
        "order_status",
        "order_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Order ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_status",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Order status ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "price",
        existing_type=sa.NUMERIC(),
        comment=None,
        existing_comment="Price in currency",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "quantity",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Quantity",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "dish_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Dish ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "order_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Order ID",
        existing_nullable=False,
    )
    op.alter_column(
        "order_dishes",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Order dish ID",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "description",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Dish description",
        existing_nullable=True,
    )
    op.alter_column(
        "dishes",
        "name",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Dish name",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "photo_url",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Photo URL",
        existing_nullable=True,
    )
    op.alter_column(
        "dishes",
        "weight",
        existing_type=sa.NUMERIC(),
        comment=None,
        existing_comment="Weight in grams",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "price",
        existing_type=sa.NUMERIC(),
        comment=None,
        existing_comment="Price in currency",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "category_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Category ID",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "user_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "dishes",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Dish ID",
        existing_nullable=False,
        existing_server_default=sa.text("nextval('dishes_id_seq'::regclass)"),
    )
    op.alter_column(
        "deliveries",
        "price",
        existing_type=sa.NUMERIC(),
        comment=None,
        existing_comment="Price in currency",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "delivery_time",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Delivery time in minutes",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "radius_to",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment=None,
        existing_comment="Radius to in kilometers",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "radius_from",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment=None,
        existing_comment="Radius from in kilometers",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "user_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "deliveries",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Delivery ID",
        existing_nullable=False,
    )
    op.alter_column(
        "clients",
        "last_login",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment=None,
        existing_comment="Last login",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment=None,
        existing_comment="Created at",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "clients",
        "is_active",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Is active",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "hashed_password",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Hashed password",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "last_name",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Last name",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "first_name",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="First name",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "telegram_username",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Telegram username",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "telegram_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Telegram ID",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "email",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Email",
        existing_nullable=True,
    )
    op.alter_column(
        "clients",
        "user_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "clients",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Client ID",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "is_sub_type",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Is sub type",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "is_type",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Is type category",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "name",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Category name",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "parent_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Parent ID",
        existing_nullable=True,
    )
    op.alter_column(
        "categories",
        "user_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="User ID",
        existing_nullable=False,
    )
    op.alter_column(
        "categories",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Category ID",
        existing_nullable=False,
    )
    # ### end Alembic commands ###
